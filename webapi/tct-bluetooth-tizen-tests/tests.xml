<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./testcase.xsl"?>
<test_definition>
  <suite category="Tizen Web Device APIs" extension="crosswalk" name="tct-bluetooth-tizen-tests">
    <set name="Bluetooth" type="js">
      <capabilities>
        <capability name="bluetooth" />
      </capabilities>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_onfinish_successful" onload_delay="180" purpose="Check if onfinish method of successful callback of discoverDevices method invoked">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_onfinish_successful.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_createBonding_deviceuuid_correct" purpose="Check if device uuid is correct">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_deviceuuid_correct.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothSocket_onmessage_callback" purpose="Check if onMessage callback function invoked">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket_onmessage_callback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_destroyBonding_callback_onerror" onload_delay="180" purpose="Check if error callback of destroyBonding method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_visible_attribute" purpose="Check visible attribute of bluetooth">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_visible_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_exist" purpose="Check if getDevice method exists">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_exist" purpose="Check if setName method exists">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_exist" purpose="Check if getKnownDevices method exists">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_createBonding_devicebonded" purpose="Check if device is bonded">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_devicebonded.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_exist" onload_delay="180" purpose="Check if unregister method exists">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_createBonding_with_errorCallback" purpose="Check if successful callback of createBonding method invoked">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothDevice_connectToServiceByUUID_onerror" purpose="Check if error callback of connectToServiceByUUID method invoked">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDevice_connectToServiceByUUID_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_exist" purpose="Check if setPowered method exists">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_with_errorCallback" onload_delay="180" purpose="Check with optional arguments setPowered(valid_state, valid_successCallback, valid_errorCallback)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_onerror" onload_delay="180" purpose="Check if error callback of registerRFCOMMServiceByUUID method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothSocket_writeData" purpose="Check if writeData method work successfully">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket_writeData.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_callback_onerror" onload_delay="180" purpose="Check if error callback of createBonding method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_callback_successful" onload_delay="180" purpose="Check if successful callback of discoverDevices method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_callback_successful.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_exist" purpose="Method of createBonding exists in bluetooth adapter">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_callback_successful" onload_delay="180" purpose="Check if successful callback of getKnownDevices method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_callback_successful.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_longname" onload_delay="180" purpose="Check if long name is set">
        <description>
          <pre_condition>Please wait at least 5 second before run test</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_longname.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_with_errorCallback" onload_delay="180" purpose="Check with optional arguments unregister(valid_successCallback, valid_errorCallback)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPower_off" onload_delay="180" purpose="Check if powered attribute of adapter is false">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPower_off.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothSocket_onclose_callback" purpose="Check if onClose callback function invoked">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>When you see communicate please unregister the service at the remote device</step_desc>
              <expected>Pass.</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket_onclose_callback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_getDevice_with_errorCallback" purpose="Check with optional arguments getDevice(valid_address, valid_successCallback, valid_errorCallback)">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_destroyBonding_exist" purpose="Method of destroyBonding exists in bluetooth adapter">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_registerRFCOMMServiceByUUID_onconnect_successful" purpose="Check whether a service record is registered and onconnect is called">
        <description>
          <pre_condition>tct-bt-helper MUST be launched on the remote device.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Push [Search] button on the remote device after pop-up is launched.</step_desc>
              <expected>The test device is found by the remote device.</expected>
            </step>
            <step order="2">
              <step_desc>Push [Connect to service] button on the remote device after selecting test device among found devices.</step_desc>
              <expected>onconnect is called.</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_onconnect_successful.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_exist" purpose="Check if stopDiscovery method exists">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_address_attribute" purpose="Check if address attribute exists in device">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_address_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_exist" purpose="Method of discoverDevices exists in bluetooth adapter">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_with_errorCallback" onload_delay="180" purpose="Check if name attribute of adapter set">
        <description>
          <pre_condition>Please wait at least 5 second before run test</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_name_attribute" purpose="Check name attribute in adapter">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_name_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_exist" purpose="Check if registerRFCOMMServiceByUUID method exists">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_createBonding_devicename_correct" purpose="Check if device name is correct">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_devicename_correct.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_onfound_successful" onload_delay="180" purpose="Check if onfound method of successful callback of discoverDevices method invoked">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_onfound_successful.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_callback_error" onload_delay="180" purpose="Check if error callback of setName method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_callback_error.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_powered_attribute" purpose="Check powered attribute in adapter">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_powered_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_callback_onerror" onload_delay="180" purpose="Check if error callback of getKnownDevices method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_callback_onerror" onload_delay="180" purpose="Check if error callback of getDevice method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_getDefaultAdapter_exist" purpose="Check if getDefaultAdapter method exists">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_getDefaultAdapter_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_deviceService_attribute" purpose="Check attribute deviceService of bluetooth">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_deviceService_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_deviceMajor_attribute" purpose="Check attribute deviceMajor of bluetooth">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_deviceMajor_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_deviceMinor_attribute" purpose="Check attribute deviceMinor of bluetooth">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_deviceMinor_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManagerObject_bluetooth_attribute" purpose="Check attribute bluetooth of tizen">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManagerObject_bluetooth_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothSocket_readData" purpose="Check if readData method correct, after sending nothing">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket_readData.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_uuid_attribute" onload_delay="180" purpose="Check attribute uuid in BluetoothServiceHandler">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_uuid_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_name_attribute" onload_delay="180" purpose="Check attribute name in BluetoothServiceHandler">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_name_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_isConnected_attribute" onload_delay="180" purpose="Check attribute isConnected in BluetoothServiceHandler">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_isConnected_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_createBonding_bondingDevice" purpose="Check using createBonding method which is in BluetoothAdapter interface to bond device">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_bondingDevice.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothClass_hasService" purpose="Check with non-optional arguments hasService(valid_service) and  if the method does what it should">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClass_hasService.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothDevice_connectToServiceByUUID" purpose="Check using connectToServiceByUUID method which is in BluetoothDevice interface to open connection">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDevice_connectToServiceByUUID.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_unregisterServiceRecord" onload_delay="180" purpose="Check using unregister method which is in BluetoothServiceHandler interface to unregister service record">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_unregisterServiceRecord.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_with_error_null_and_success_TypeMismatch" purpose="Check whether createBonding() method called with invalid successCallback and errorCallback set to null throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_with_error_null_and_success_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_invalid_callback_name" onload_delay="180" purpose="Check whether discoverDevices() method called with invalid successCallback throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_invalid_callback_name.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_with_errorCallback" onload_delay="180" purpose="Check with optional arguments getKnownDevices(valid_successCallback, valid_errorCallback)">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered" purpose="Check whether setPowered() method properly sets powered parameter of BluetoothAdapter (part 2)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_with_errorCallback" onload_delay="180" purpose="Check with optional arguments stopDiscovery(valid_successCallback, valid_errorCallback)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothSocketState_open_enum" purpose="Check enum OPEN in socket">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocketState_open_enum.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_AUDIO_VIDEO_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_AUDIO_VIDEO">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_AUDIO_VIDEO_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_COMPUTER_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_COMPUTER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_COMPUTER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_HEALTH_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_HEALTH">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_HEALTH_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_IMAGING_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_IMAGING">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_IMAGING_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_MISC_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_MISC">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_MISC_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_NETWORK_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_NETWORK">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_NETWORK_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_PERIPHERAL_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_PERIPHERAL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_PERIPHERAL_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_PHONE_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_PHONE">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_PHONE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_TOY_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_TOY">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_TOY_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_UNCATEGORIZED_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_UNCATEGORIZED">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_WEARABLE_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_WEARABLE">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_WEARABLE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_CAMCORDER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_CAMCORDER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_CAMCORDER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_CAR_AUDIO_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_CAR_AUDIO">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_CAR_AUDIO_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_DISPLAY_AND_LOUDSPEAKER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_DISPLAY_AND_LOUDSPEAKER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_DISPLAY_AND_LOUDSPEAKER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_GAMING_TOY_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_GAMING_TOY">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_GAMING_TOY_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_HANDSFREE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_HANDSFREE">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_HANDSFREE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_HEADPHONES_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_HEADPHONES">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_HEADPHONES_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_HIFI_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_HIFI">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_HIFI_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_LOUDSPEAKER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_LOUDSPEAKER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_LOUDSPEAKER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_MICROPHONE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_MICROPHONE">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_MICROPHONE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_MONITOR_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_MONITOR">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_MONITOR_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_PORTABLE_AUDIO_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_PORTABLE_AUDIO">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_PORTABLE_AUDIO_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_SETTOP_BOX_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_SETTOP_BOX">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_SETTOP_BOX_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_UNRECOGNIZED_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_UNRECOGNIZED">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_UNRECOGNIZED_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_VCR_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_VCR">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_VCR_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_VIDEO_CAMERA_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_VIDEO_CAMERA">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_VIDEO_CAMERA_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_VIDEO_CONFERENCING_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_VIDEO_CONFERENCING">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_VIDEO_CONFERENCING_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_WEARABLE_HEADSET_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_WEARABLE_HEADSET">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_WEARABLE_HEADSET_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_DESKTOP_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_DESKTOP">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_DESKTOP_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_HANDHELD_PC_OR_PDA_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_HANDHELD_PC_OR_PDA">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_HANDHELD_PC_OR_PDA_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_LAPTOP_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_LAPTOP">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_LAPTOP_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_PALM_PC_OR_PDA_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_PALM_PC_OR_PDA">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_PALM_PC_OR_PDA_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_SERVER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_SERVER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_SERVER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_UNCATEGORIZED_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_UNCATEGORIZED">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_WEARABLE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_WEARABLE">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_WEARABLE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_ANKLE_PROSTHESIS_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_ANKLE_PROSTHESIS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_ANKLE_PROSTHESIS_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_BLOOD_PRESSURE_MONITOR_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_BLOOD_PRESSURE_MONITOR">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_BLOOD_PRESSURE_MONITOR_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_BODY_COMPOSITION_ANALYZER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_BODY_COMPOSITION_ANALYZER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_BODY_COMPOSITION_ANALYZER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_DATA_DISPLAY_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_DATA_DISPLAY">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_DATA_DISPLAY_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_GLUCOSE_METER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_GLUCOSE_METER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_GLUCOSE_METER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_KNEE_PROSTHESIS_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_KNEE_PROSTHESIS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_KNEE_PROSTHESIS_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_MEDICATION_MONITOR_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_MEDICATION_MONITOR">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_MEDICATION_MONITOR_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_PEAK_FLOW_MONITOR_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_PEAK_FLOW_MONITOR">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_PEAK_FLOW_MONITOR_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_PULSE_OXIMETER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_PULSE_OXIMETER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_PULSE_OXIMETER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_PULSE_RATE_MONITOR_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_PULSE_RATE_MONITOR">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_PULSE_RATE_MONITOR_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_STEP_COUNTER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_STEP_COUNTER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_STEP_COUNTER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_THERMOMETER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_THERMOMETER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_THERMOMETER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_UNDEFINED_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_UNDEFINED">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_UNDEFINED_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_WEIGHING_SCALE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_WEIGHING_SCALE">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_WEIGHING_SCALE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_CAMERA_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_CAMERA">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_CAMERA_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_DISPLAY_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_DISPLAY">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_DISPLAY_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_PRINTER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_PRINTER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_PRINTER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_SCANNER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_SCANNER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_SCANNER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_UNCATEGORIZED_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_UNCATEGORIZED">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_CARD_READER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_CARD_READER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_CARD_READER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_DEGITIZER_TABLET_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_DEGITIZER_TABLET">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_DEGITIZER_TABLET_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_DIGITAL_PEN_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_DIGITAL_PEN">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_DIGITAL_PEN_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_GAMEPAD_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_GAMEPAD">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_GAMEPAD_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_INPUT_DEVICE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_INPUT_DEVICE">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_INPUT_DEVICE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_SCANNER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_SCANNER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_SCANNER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_JOYSTICK_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_JOYSTICK">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_JOYSTICK_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_AND_POINTING_DEVICE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_AND_POINTING_DEVICE">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_AND_POINTING_DEVICE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_POINTING_DEVICE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_POINTING_DEVICE">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_POINTING_DEVICE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_REMOTE_CONTROL_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_REMOTE_CONTROL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_REMOTE_CONTROL_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_SENSING_DEVICE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_SENSING_DEVICE">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_SENSING_DEVICE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_UNCATEGORIZED_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_UNCATEGORIZED">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_CELLULAR_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_CELLULAR">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_CELLULAR_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_CORDLESS_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_CORDLESS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_CORDLESS_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_ISDN_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_ISDN">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_ISDN_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_MODEM_OR_GATEWAY_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_MODEM_OR_GATEWAY">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_MODEM_OR_GATEWAY_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_SMARTPHONE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_SMARTPHONE">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_SMARTPHONE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_UNCATEGORIZED_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_UNCATEGORIZED">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_CONTROLLER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_CONTROLLER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_CONTROLLER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_DOLL_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_DOLL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_DOLL_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_GAME_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_GAME">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_GAME_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_ROBOT_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_ROBOT">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_ROBOT_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_VEHICLE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_VEHICLE">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_VEHICLE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_GLASSES_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_GLASSES">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_GLASSES_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_HELMET_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_HELMET">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_HELMET_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_JACKET_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_JACKET">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_JACKET_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_PAGER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_PAGER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_PAGER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_WRITST_WATCH_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_WRITST_WATCH">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_WRITST_WATCH_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_AUDIO_const" purpose="Check various identifiers of BluetoothClassDeviceService_AUDIO">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_AUDIO_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_CAPTURING_const" purpose="Check various identifiers of BluetoothClassDeviceService_CAPTURING">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_CAPTURING_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_INFORMATION_const" purpose="Check various identifiers of BluetoothClassDeviceService_INFORMATION">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_INFORMATION_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_LIMITED_DISCOVERABILITY_const" purpose="Check various identifiers of BluetoothClassDeviceService_LIMITED_DISCOVERABILITY">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_LIMITED_DISCOVERABILITY_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_NETWORKING_const" purpose="Check various identifiers of BluetoothClassDeviceService_NETWORKING">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_NETWORKING_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_OBJECT_TRANSFER_const" purpose="Check various identifiers of BluetoothClassDeviceService_OBJECT_TRANSFER">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_OBJECT_TRANSFER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_POSITIONING_const" purpose="Check various identifiers of BluetoothClassDeviceService_POSITIONING">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_POSITIONING_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_RENDERING_const" purpose="Check various identifiers of BluetoothClassDeviceService_RENDERING">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_RENDERING_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_TELEPHONY_const" purpose="Check various identifiers of BluetoothClassDeviceService_TELEPHONY">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_TELEPHONY_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_extend" purpose="Test whether the object can have new properties added for BluetoothClassDeviceMajor">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_extend" purpose="Test whether the object BluetoothClassDeviceMinor can have new properties added">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_extend" purpose="Test whether the object can have new properties added for BluetoothClassDeviceService">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_extend" purpose="Test whether the object can have new properties added for BluetoothAdapter">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_notexist" purpose="Check if is possible to call BluetoothAdapter in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_notexist" purpose="Check if is possible to call BluetoothClassDeviceMajor in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_notexist" purpose="Check if is possible to call BluetoothClassDeviceMinor in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_notexist" purpose="Check if is possible to call BluetoothClassDeviceService with new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClass_notexist" purpose="Check if is possible to call BluetoothClass in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClass_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDeviceArraySuccessCallback_notexist" purpose="Check if is possible to call BluetoothDeviceArraySuccessCallback in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDeviceArraySuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDeviceSuccessCallback_notexist" purpose="Check if is possible to call BluetoothDeviceSuccessCallback in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDeviceSuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDevice_notexist" purpose="Check if is possible to call BluetoothDevice in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDevice_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDiscoverDevicesSuccessCallback_notexist" purpose="Check if is possible to call BluetoothDiscoverDevicesSuccessCallback in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDiscoverDevicesSuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_extend" purpose="Test whether the object can have new properties added for BluetoothManager">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_in_tizen" purpose="Check attribute bluetooth for readonly">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_in_tizen.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_notexist" purpose="Check if is possible to call BluetoothManager in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_extend" onload_delay="180" purpose="Test whether the object can have new properties added for BluetoothServiceHandler">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_notexist" purpose="Check if is possible to call BluetoothServiceHandler in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceSuccessCallback_notexist" purpose="Check if is possible to call BluetoothServiceSuccessCallback in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceSuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothSocketSuccessCallback_notexist" purpose="Check if is possible to call BluetoothSocketSuccessCallback in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocketSuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothSocket_notexist" purpose="Check if is possible to call BluetoothSocket in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_exist" purpose="Check if setVisible method exists">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_missarg" onload_delay="180" purpose="Check discoverDevices with missing non-optional argument">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_missarg" onload_delay="180" purpose="Check getKnownDevices with missing non-optional argument">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_missarg" onload_delay="180" purpose="Check getDevice with missing non-optional argument">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_missarg" onload_delay="180" purpose="Check createBonding with missing non-optional argument">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_missarg" onload_delay="180" purpose="Check registerRFCOMMServiceByUUID with missing non-optional argument">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_successCallback_invalid_cb" onload_delay="180" purpose="Check argument setName() successCallback validation">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_errorCallback_invalid_cb" onload_delay="180" purpose="Check argument setName() errorCallback validation">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether setName() method called with invalid successCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether setName() method called with invalid errorCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether setPowered() method called with invalid successCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_successCallback_invalid_cb" onload_delay="180" purpose="Check if successful callback of setPowered() method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether setPowered() method called with invalid errorCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_errorCallback_invalid_cb" onload_delay="180" purpose="Check argument setPowered() errorCallback validation">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether discoverDevices() method called with invalid successCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_successCallback_invalid_cb" onload_delay="180" purpose="Check discoverDevices() argument successCallback validation - use simple function">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether discoverDevices() method called with invalid errorCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_errorCallback_invalid_cb" onload_delay="180" purpose="Check argument discoverDevices() errorCallback validation">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether stopDiscovery() method called with invalid successCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether stopDiscovery() method called with invalid errorCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_successCallback_invalid_cb" onload_delay="180" purpose="Check stopDiscovery() argument successCallback validation - use {onsuccess: function (){}}">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_errorCallback_invalid_cb" onload_delay="180" purpose="Check stopDiscovery() argument errorCallback validation">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether getKnownDevices() method called with invalid successCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether getKnownDevices() method called with invalid errorCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_successCallback_invalid_cb" onload_delay="180" purpose="Check getKnownDevices() argument successCallback validation - use {onsuccess: function (){}}">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_errorCallback_invalid_cb" onload_delay="180" purpose="Check getKnownDevices() argument errorCallback validation - use {onerror: function (){}}">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether getDevice() method called with invalid successCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether getDevice() method called with invalid errorCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_successCallback_invalid_cb" onload_delay="180" purpose="Check if successful callback of getDevice() method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_errorCallback_invalid_cb" onload_delay="180" purpose="Check getDevice() argument errorCallback validation - use {onerror: function (){}}">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether createBonding() method called with invalid successCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_successCallback_invalid_cb" onload_delay="180" purpose="Check argument createBonding() successCallback validation">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether createBonding() method called with invalid errorCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_errorCallback_invalid_cb" onload_delay="180" purpose="Check argument createBonding() errorCallback validation">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether registerRFCOMMServiceByUUID() method called with invalid successCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_successCallback_invalid_cb" onload_delay="180" purpose="Check argument registerRFCOMMServiceByUUID() successCallback validation - use {onsuccess: function (){}}">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether registerRFCOMMServiceByUUID() method called with invalid errorCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_errorCallback_invalid_cb" onload_delay="180" purpose="Check argument registerRFCOMMServiceByUUID() errorCallback validation">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_destroyBonding_successCallback_TypeMismatch" purpose="Check whether destroyBonding() method called with invalid successCallback argument throws an exception">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_destroyBonding_errorCallback_TypeMismatch" purpose="Check whether destroyBonding() method called with invalid errorCallback argument throws an exception">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_destroyBonding_successCallback_invalid_cb" purpose="Check if destroyBonding() method throws exception when invalid success callback is given">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_destroyBonding_errorCallback_invalid_cb" purpose="Check if destroyBonding() method throws exception when invalid error callback is given">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether unregister() method called with invalid successCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether unregister() method of the BluetoothServiceHandler with invalid errorCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_successCallback_invalid_cb" onload_delay="180" purpose="Check if successful callback of unregister() method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_errorCallback_invalid_cb" onload_delay="180" purpose="Check unregister() argument errorCallback validation">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDeviceArraySuccessCallback_onsuccess" onload_delay="180" purpose="Check if BluetoothDeviceArraySuccessCallback callback is called and if its arguments have proper type">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDeviceArraySuccessCallback_onsuccess.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceSuccessCallback_onsuccess" onload_delay="180" purpose="Check if BluetoothServiceSuccessCallback callback is called and if its arguments have proper type">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceSuccessCallback_onsuccess.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDiscoverDevicesSuccessCallback_onstarted" onload_delay="180" purpose="Check if BluetoothDiscoverDevicesSuccessCallback callback is called and if its onstarted arguments have proper type">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDiscoverDevicesSuccessCallback_onstarted.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDiscoverDevicesSuccessCallback_ondevicefound" onload_delay="180" purpose="Check if BluetoothDiscoverDevicesSuccessCallback callback is called and if its ondevicefound arguments have proper type">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDiscoverDevicesSuccessCallback_ondevicefound.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDiscoverDevicesSuccessCallback_onfinished" onload_delay="180" purpose="Check if BluetoothDiscoverDevicesSuccessCallback callback is called and if its onfinished arguments have proper type">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDiscoverDevicesSuccessCallback_onfinished.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothDiscoverDevicesSuccessCallback_ondevicedisappeared" purpose="Check if BluetoothDiscoverDevicesSuccessCallback callback is called and if its ondevicedisappeared arguments have proper type">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Disable the bluetooth of the remote device after pop-up is launched on test device.</step_desc>
              <expected>ondevicedisappeared callback is invoked.</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDiscoverDevicesSuccessCallback_ondevicedisappeared.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_getDefaultAdapter_extra_argument" purpose="Check if method getDefaultAdapter of BluetoothManager accepts extra argument">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_getDefaultAdapter_extra_argument.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothDevice_connectToServiceByUUID_with_errorCallback" purpose="Check connectToServiceByUUID with errorCallback">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDevice_connectToServiceByUUID_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothSocket_close" purpose="Proper close invocation without arguments - should work">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket_close.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName" onload_delay="180" purpose="Check with non-optional arguments setName(valid_name)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_with_successCallback" onload_delay="180" purpose="Check with optional arguments setName(valid_name, successCallback)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_with_successCallback" onload_delay="180" purpose="Check with optional arguments setPowered(valid_state, valid_successCallback)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices" onload_delay="180" purpose="Check with non-optional arguments discoverDevices(valid_successCallback)">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_with_errorCallback" onload_delay="180" purpose="Check with non-optional arguments discoverDevices(valid_successCallback, errorCallback)">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_getDefaultAdapter" purpose="Proper invocation of getDefaultAdapter method  without arguments">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_getDefaultAdapter.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_with_successCallback" onload_delay="180" purpose="Check with optional arguments stopDiscovery(valid_successCallback)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery" onload_delay="180" purpose="Check with optional arguments stopDiscovery">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices" onload_delay="180" purpose="Check with optional arguments getKnownDevices(valid_successCallback)">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_getDevice" purpose="Check with non-optional arguments getDevice(valid_address, valid_successCallback)">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_createBonding" purpose="Check with non-optional arguments createBonding(valid_address, valid_successCallback)">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_destroyBonding_with_errorCallback" purpose="Check with optional arguments destroyBonding(valid_address, valid_successCallback, valid_errorCallback)">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_destroyBonding_with_successCallback" purpose="Check with optional arguments destroyBonding(valid_address, valid_successCallback)">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_destroyBonding" purpose="Check with non-optional arguments destroyBonding(valid_address)">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_with_errorCallback" onload_delay="180" purpose="Check with optional arguments registerRFCOMMServiceByUUID(valid_uuid, valid_name, valid_successCallback, valid_errorCallback)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID" onload_delay="180" purpose="Check with optional arguments registerRFCOMMServiceByUUID(valid_uuid, valid_name, valid_successCallback)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_with_successCallback" onload_delay="180" purpose="Check with optional arguments unregister(valid_successCallback)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister" onload_delay="180" purpose="Check with non-optional arguments unregister()">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="Bluetooth_discoverDevices_successCallback_invalidcb" onload_delay="180" purpose="Check BluetoothDiscoverDevicesSuccessCallback() callback with invalid callback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/Bluetooth_discoverDevices_successCallback_invalidcb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether setVisible() method called with invalid successCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_successCallback_invalid_cb" onload_delay="180" purpose="Check if successful callback of setVisible() method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether setVisible() method called with invalid errorCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_errorCallback_invalid_cb" onload_delay="180" purpose="Check if error callback of setVisible() method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_with_timeout" onload_delay="180" purpose="Check with optional arguments setVisible(valid_mode, valid_successCallback, valid_errorCallback, valid_timeout)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_with_timeout.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_with_errorCallback" onload_delay="180" purpose="Check with optional arguments setVisible(valid_mode, valid_successCallback, valid_errorCallback)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_with_successCallback" onload_delay="180" purpose="Check with optional arguments setVisible(valid_mode, valid_successCallback)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible" onload_delay="180" purpose="Check with optional arguments setVisible(valid_mode)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapterChangeCallback_notexist" purpose="Check if is possible to call BluetoothAdapterChangeCallback in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapterChangeCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener" onload_delay="180" purpose="Check with non-optional arguments setChangeListener(valid_listener)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener_listener_TypeMismatch" purpose="Check whether setChangeListener() method called with invalid listener argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener_listener_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener_exist" purpose="Check if setChangeListener method exists">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener_listener_invalid_cb" purpose="Check setChangeListener() with invalid callback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener_listener_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener_missarg" purpose="Check setChangeListener with missing non-optional argument">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapterChangeCallback_onnamechanged" onload_delay="180" purpose="Check onnamechanged listener is invoked after setName()">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapterChangeCallback_onnamechanged.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapterChangeCallback_onstatechanged" onload_delay="180" purpose="Check onstatechanged listener is invoked after setPowered()">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapterChangeCallback_onstatechanged.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapterChangeCallback_onvisibilitychanged" onload_delay="180" purpose="Check onvisibilitychanged listener is invoked after setVisible()">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapterChangeCallback_onvisibilitychanged.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_unsetChangeListener" onload_delay="180" purpose="Check unsetChangeListener of adapter">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_unsetChangeListener.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_unsetChangeListener_exist" purpose="Check if unsetChangeListener method exists">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_unsetChangeListener_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_unsetChangeListener_extra_argument" purpose="Check if method close of unsetChangeListener accepts extra argument">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_unsetChangeListener_extra_argument.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_notexist" purpose="Check if is possible to call BluetoothHealthApplication in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_extend" onload_delay="180" purpose="Test whether the object BluetoothHealthApplication can have new properties added it">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_dataType_attribute" onload_delay="180" purpose="Test whether the dataType unsigned short exist in BluetoothHealthApplication has default value and its readonly">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_dataType_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_name_attribute" onload_delay="180" purpose="Test whether the name string exist in BluetoothHealthApplication has default value and its readonly">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_name_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_onconnect_attribute" onload_delay="180" purpose="Test whether the onconnect in BluetoothHealthApplication has default value and it's writable">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_onconnect_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getBluetoothProfileHandler" purpose="Check with non-optional arguments getBluetoothProfileHandler(valid_profileType)">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getBluetoothProfileHandler.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getBluetoothProfileHandler_exist" purpose="Check if getBluetoothProfileHandler method exists">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getBluetoothProfileHandler_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_extend" purpose="Test whether the object BluetoothHealthProfileHandler can have new properties added it">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_notexist" purpose="Check if is possible to call BluetoothHealthProfileHandler in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication" onload_delay="180" purpose="Check with non optional arguments registerSinkApplication">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether registerSinkApplication() method called with invalid errorCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_errorCallback_invalid_cb" onload_delay="180" purpose="Check argument registerSinkApplication() errorCallback validation">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_exist" purpose="Check if registerSinkApplication method exists">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_missarg" purpose="Check registerSinkApplication with missing non-optional argument">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether registerSinkApplication() method called with invalid successCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_successCallback_invalid_cb" onload_delay="180" purpose="Check argument registerSinkApplication() successCallback validation">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_with_errorCallback" onload_delay="180" purpose="Check registerSinkApplication with valid optional arguments">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister" onload_delay="180" purpose="Check unregister with non optional arguments">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether unregiste() method of the BluetoothHealthApplication called with invalid errorCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_errorCallback_invalid_cb" onload_delay="180" purpose="Check argument unregister() errorCallback validation">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_exist" onload_delay="180" purpose="Check if unregister method exists in BluetoothHealthApplication">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether unregister() method called with invalid successCallback throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_successCallback_invalid_cb" onload_delay="180" purpose="Check argument unregister() successCallback validation">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_with_errorCallback" onload_delay="180" purpose="Check unregister with successCallback and errorCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_with_successCallback" onload_delay="180" purpose="Check unregister with successCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthChannel_notexist" purpose="Check if is possible to call BluetoothHealthChannel in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthChannel_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_connectToSource_exist" purpose="Check if connectToSource method exists">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_connectToSource_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_connectToSource_missarg" purpose="Check connectToSource with missing non-optional argument">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_connectToSource_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothProfileHandler_notexist" purpose="Check if is possible to call BluetoothProfileHandler in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothProfileHandler_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothProfileHandler_profileType_attribute" purpose="Check if profileType attribute exists in BluetoothProfileHandler">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothProfileHandler_profileType_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothServiceHandler_onconnect_attribute" purpose="Check whether a service record is registered in the device service record database properly (part 2)">
        <description>
          <pre_condition>tct-bt-helper MUST be launched on the remote device.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Push [Search] button on the remote device after pop-up is launched.</step_desc>
              <expected>The test device is found by the remote device.</expected>
            </step>
            <step order="2">
              <step_desc>Push [Connect to service] button on the remote device after selecting test device among found devices.</step_desc>
              <expected>onconnect is called.</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_onconnect_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplicationSuccessCallback_onsuccess" onload_delay="180" purpose="Check if BluetoothHealthApplicationSuccessCallback callback is called with propriety arguments">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplicationSuccessCallback_onsuccess.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplicationSuccessCallback_notexist" purpose="Check if is possible to call BluetoothHealthApplicationSuccessCallback in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplicationSuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthChannelChangeCallback_notexist" purpose="Check if is possible to call BluetoothHealthChannelChangeCallback in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthChannelChangeCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthChannelSuccessCallback_notexist" purpose="Check if is possible to call BluetoothHealthChannelSuccessCallback in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthChannelSuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManagerObject_notexist" purpose="Check if is possible to call BluetoothManagerObject in new expresion">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManagerObject_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothProfileHandler_extend" purpose="Test whether the object can have new properties added for BluetoothProfileHandler">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothProfileHandler_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_callback_onerror" onload_delay="180" purpose="Check if error callback of discoverDevices method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_callback_onerror" onload_delay="180" purpose="Check if error callback of BluetoothAdapter method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_callback_onerror" onload_delay="180" purpose="Check if error callback of stopDiscovery method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_callback_onerror" onload_delay="180" purpose="Check if error callback of unregister method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_callback_error" onload_delay="180" purpose="Check if error callback of registerSinkApplication method invoked">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_callback_error.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_createBonding_deviceaddress_correct" purpose="Check if device address is correct">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_deviceaddress_correct.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_destroyBonding_with_success_TypeMismatch_and_error_null" purpose="Check whether destroyBonding() method called with invalid successCallback and errorCallback set to null throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_with_success_TypeMismatch_and_error_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_destroyBonding_with_success_null_and_error_TypeMismatch" purpose="Check whether destroyBonding() method called with invalid errorCallback and successCallback set to null throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_with_success_null_and_error_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_onfound_deviceaddress" onload_delay="180" purpose="Check if device address is found">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_onfound_deviceaddress.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_onfound_devicename" onload_delay="180" purpose="Check if device name is found">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_onfound_devicename.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_function_type_check" purpose="Check if BluetoothAdapter exists and implements methods">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_function_type_check.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_with_success_TypeMismatch_and_error_null" purpose="Check whether getDevice() method called with invalid successCallback and errorCallback set to null throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_with_success_TypeMismatch_and_error_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_check_types" onload_delay="180" purpose="Check whether all known Bluetooth devices are listed properly (part 2)">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_check_types.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_success_TypeMismatch_error_null" purpose="Check whether getKnownDevices() method called with invalid successCallback and null as errorCallback argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_success_TypeMismatch_error_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_with_success_TypeMismatch_and_error_null" purpose="Check whether registerRFCOMMServiceByUUID() method called with invalid successCallback and errorCallback set to null throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_with_success_TypeMismatch_and_error_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_with_success_TypeMismatch_and_error_null" purpose="Check whether setName() method called with invalid successCallback and errorCallback set to null throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_with_success_TypeMismatch_and_error_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_with_success_null_and_error_TypeMismatch" purpose="Check whether setName() method called with invalid errorCallback and successCallback set to null throws an exception">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_with_success_null_and_error_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothClass" purpose="Check BluetoothClass attributes and functions">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>several tests executed from base test</step_desc>
              <expected>all subtests should be successful</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClass.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothDevice" purpose="Check BluetoothDevice attributes and functions">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>several tests executed from base test</step_desc>
              <expected>all subtests should be successful</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDevice.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="manual" id="BluetoothSocket" purpose="Check BluetoothSocket attributes and functions">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>several tests executed from base test</step_desc>
              <expected>all subtests should be successful</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket.html</test_script_entry>
        </description>
      </testcase>
    </set>
  </suite>
</test_definition>