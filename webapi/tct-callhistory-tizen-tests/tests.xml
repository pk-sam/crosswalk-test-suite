<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./testcase.xsl"?>
<test_definition>
  <suite category="Tizen Web Device APIs" extension="crosswalk" name="tct-callhistory-tizen-tests">
    <set name="Callhistory" type="js">
      <capabilities>
        <capability name="telephony" />
      </capabilities>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_exist" purpose="Check if find method exists">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistory_find" purpose="Check if fetch call history items">
        <description>
          <pre_condition>Make an existence call history (at least one entry)</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_remove_exist" purpose="Check if remove method exists">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_remove_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistory_remove" purpose="Check if delete a call history entry synchronously">
        <description>
          <pre_condition>Make an existence call history</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_remove.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeBatch_exist" purpose="Check if removeBatch method exists">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistory_removeBatch" purpose="Check if delete a list of call history entries asynchronously">
        <description>
          <pre_condition>Make some existence call history</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeAll_exist" purpose="Check if removeAll method exists">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeAll_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeAll" purpose="Check if removeAll called without arguments works">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeAll.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_addChangeListener_exist" purpose="Check if addChangeListener method exists">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_addChangeListener_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_addChangeListener" purpose="Check if addChangeListener method works properly">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_addChangeListener.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeChangeListener_exist" purpose="Check if removeChangeListener method exists">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeChangeListener_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeChangeListener" purpose="Check if unregister a previously registered listener">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeChangeListener.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_limit_0" onload_delay="90" purpose="Check if no limit the query result">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_limit_0.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistory_find_limit_2" purpose="Check if limit the query result">
        <description>
          <pre_condition>Make at least 3 existence call history</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_limit_2.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistory_removeBatch_findByDirection" purpose="Check if find call history items by REJECTED and then delete them from call history entries">
        <description>
          <pre_condition>Make at least 1 REJECTED call</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_findByDirection.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistory_remove_findBySortMode" purpose="Check if find call history items by startTime desc and then delete the first call history entry">
        <description>
          <pre_condition>Make some existence call history</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_remove_findBySortMode.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistory_removeBatch_findByType" purpose="Check if find call history entries by TEL and then delete all of them from call history entries">
        <description>
          <pre_condition>Make some existence PHONE NUMBER ADDRESSING call history</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_findByType.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistoryEntry_type_TEL" purpose="Check if attribute type value is TEL">
        <description>
          <pre_condition>Make some existence PHONE NUMBER ADDRESSING call history</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryEntry_type_TEL.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistoryEntry_features_VOICECALL" purpose="Check if features value is VOICECALL for voice-only calls">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryEntry_features_VOICECALL.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistoryEntry_direction_DIALED" purpose="Check if direction value is DIALED when user dialed a call">
        <description>
          <pre_condition>Make a call</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryEntry_direction_DIALED.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistoryEntry_direction_MISSED" purpose="Check if direction value is MISSED when user missed calls">
        <description>
          <pre_condition>Make at least one MISSED call, which was seen</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryEntry_direction_MISSED.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistoryEntry_direction_MISSEDNEW" purpose="Check if direction value is MISSEDNEW when user missed call which is not seen">
        <description>
          <pre_condition>Make at least one MISSED call which is NOT SEEN</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryEntry_direction_MISSEDNEW.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistoryEntry_direction_RECEIVED" purpose="Check if direction value is RECEIVED when user received a call">
        <description>
          <pre_condition>Make a RECEIVED call</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryEntry_direction_RECEIVED.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistoryEntry_direction_REJECTED" purpose="Check if direction value is REJECTED when user rejected a call">
        <description>
          <pre_condition>Make a REJECTED call</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryEntry_direction_REJECTED.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_nullableArgs_null" onload_delay="90" purpose="Check if callhistory.find performs successCallback when all optional arguments are null">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_nullableArgs_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_addChangeListener_observer_onadded_null" onload_delay="90" purpose="Check whether addChangeListener() registers listener with null onadded argument">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_addChangeListener_observer_onadded_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_addChangeListener_observer_onadded_undefined" onload_delay="90" purpose="Check whether addChangeListener() registers listener with undefined onadded argument">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_addChangeListener_observer_onadded_undefined.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_addChangeListener_observer_onchanged_null" onload_delay="90" purpose="Check whether addChangeListener() registers listener with null onchanged argument">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_addChangeListener_observer_onchanged_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_addChangeListener_observer_onchanged_undefined" onload_delay="90" purpose="Check whether addChangeListener() registers listener with undefined onchanged argument">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_addChangeListener_observer_onchanged_undefined.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_errorCallback_null" onload_delay="90" purpose="Check whether find() method called with null errorCallback lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_errorCallback_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_filter_null" onload_delay="90" purpose="Check whether find() method called with null filter lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_filter_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_sortMode_null" onload_delay="90" purpose="Check whether find() method called with null filter and sortMode lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_sortMode_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_limit_null" onload_delay="90" purpose="Check whether find() method called with null filter, sortMode and limit lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_limit_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_offset_null" onload_delay="90" purpose="Check whether find() method called with null filter, sortMode, limit and offset lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_offset_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistory_removeBatch_successCallback_null" purpose="Check whether removeBatch() method called with null successCallback deletes two entries from call history">
        <description>
          <pre_condition>Make at least 3 existence call history</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_successCallback_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistory_removeBatch_errorCallback_null" purpose="Check whether removeBatch() method called with null errorCallback deletes two entries from call history entries">
        <description>
          <pre_condition>Make at least 3 existence call history</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_errorCallback_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_missarg" purpose="Check if method called with missing non-optional argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_with_errorCallback" onload_delay="90" purpose="Check if find called with optional errorCallback works as expected">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_with_filter" onload_delay="90" purpose="Check if find called with optional filter works as expected">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_with_filter.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_with_sortMode" onload_delay="90" purpose="Check if find called with optional sortMode works as expected">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_with_sortMode.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_with_limit" onload_delay="90" purpose="Check if find called with optional limit works as expected">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_with_limit.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_with_offset" onload_delay="90" purpose="Check if find called with optional offset works as expected">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_with_offset.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_errorCallback_invalid_cb" onload_delay="90" purpose="Check if find throws exception when error callback is incorrect">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_errorCallback_TypeMismatch" onload_delay="90" purpose="Check if find throws exception when errorCallback is incorrect">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_successCallback_TypeMismatch" onload_delay="90" purpose="Check if find throws exception when successCallback is incorrect">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_successCallback_invalid_cb" purpose="Check if find throws exception when success callback is incorrect">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_filter_TypeMismatch" onload_delay="90" purpose="Check if find throws exception when filter is incorrect">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_filter_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_sortMode_TypeMismatch" onload_delay="90" purpose="Check if find throws exception when sortMode is incorrect">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_sortMode_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_filter_invalid_obj" onload_delay="90" purpose="Check if find throws exception when filter is a simple object">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_filter_invalid_obj.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_sortMode_invalid_obj" onload_delay="90" purpose="Check if find throws exception when sortMode is a simple object">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_sortMode_invalid_obj.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_remove_missarg" purpose="Check if remove called with missing non-optional argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_remove_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_remove_entry_TypeMismatch" purpose="Check if remove throws exception when entry is incorrect">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_remove_entry_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeBatch_missarg" purpose="Check if removeBatch called with missing non-optional argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_notexist" purpose="Check if CallHistory cannot be called in new expression and as a function or in new expression">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_extend" purpose="Check if callhistory object can have new properties added">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistory_removeBatch_with_successCallback" purpose="Check if removeBatch called with optional successCallback works as expected">
        <description>
          <pre_condition>Make an existence call history</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistory_removeBatch_with_errorCallback" purpose="Check if removeBatch called with optional errorCallback works as expected">
        <description>
          <pre_condition>Make an existence call history</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeBatch_entries_TypeMismatch" purpose="Check if removeBatch throws exception when entries is incorrect">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_entries_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeBatch_successCallback_invalid_cb" purpose="Check if removeBatch throws exception when success callback is incorrect">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeBatch_errorCallback_invalid_cb" purpose="Check if removeBatch throws exception when error callback is incorrect">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeBatch_successCallback_TypeMismatch" purpose="Check if removeBatch throws exception when successCallback is invalid">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeBatch_errorCallback_TypeMismatch" purpose="Check if removeBatch throws exception when errorCallback is invalid">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistory_removeAll_with_successCallback" purpose="Check if removeAll called with optional successCallback works as expected - delete all call history">
        <description>
          <pre_condition>Make some existence call history</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeAll_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeAll_with_errorCallback" onload_delay="90" purpose="Check if removeAll called with optional errorCallback works as expected">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeAll_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeAll_successCallback_TypeMismatch" purpose="Check if removeAll throws exception when successCallback is incorrect">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeAll_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeAll_errorCallback_TypeMismatch" purpose="Check if removeAll throws exception when errorCallback is incorrect">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeAll_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeAll_successCallback_invalid_cb" purpose="Check if removeAll throws exception when successCallback is invalid">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeAll_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_removeAll_errorCallback_invalid_cb" purpose="Check if removeAll throws exception when errorCallback is invalid">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeAll_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistoryChangeCallback_notexist" purpose="Check if CallHistoryChangeCallback cannot be called in new expression and as a function">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryChangeCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistoryChangeCallback_onadded" purpose="Check if CallHistoryChangeCallback onadded is called and if its arguments have proper type">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryChangeCallback_onadded.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistoryChangeCallback_onchanged" purpose="Check if CallHistoryChangeCallback onchanged is called properly">
        <description>
          <pre_condition>Make an untouched MISSED call</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryChangeCallback_onchanged.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistoryEntryArraySuccessCallback_onsuccess" purpose="Check if CallHistoryEntryArraySuccessCallback onsuccess is called properly">
        <description>
          <pre_condition>Make an existence call history</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryEntryArraySuccessCallback_onsuccess.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistoryEntry_direction_attribute" purpose="Check if CallHistoryEntry have direction attribute with proper type, not null">
        <description>
          <pre_condition>Make an existence call history with one new missed call which was not seen</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryEntry_direction_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistoryEntry_notexist" purpose="Check if CallHistoryEntry cannot be called in new expression and as a function or in new expression">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryEntry_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="RemoteParty_notexist" purpose="Check if RemoteParty cannot be called in new expression and as a function or in new expression">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/RemoteParty_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_in_tizen" purpose="Check if CallHistory exists and implements methods">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_in_tizen.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistoryEntryArraySuccessCallback_notexist" purpose="Check if CallHistoryEntryArraySuccessCallback cannot be called in new expression and as a function">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryEntryArraySuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_addChangeListener_missarg" purpose="Check if addChangeListener called with missing non-optional argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_addChangeListener_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_addChangeListener_observer_TypeMismatch" purpose="Check if addChangeListener throws exception when observer is incorrect">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_addChangeListener_observer_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_addChangeListener_observer_invalid_cb" purpose="Check if addChangeListener throws exception when observer is invalid">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_addChangeListener_observer_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_errorCallback_undefined" onload_delay="90" purpose="Check whether find() method called with undefined errorCallback lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_errorCallback_undefined.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistory_removeBatch_successCallback_undefined" purpose="Check whether removeBatch() method called with undefined successCallback throws exception">
        <description>
          <pre_condition>Make at least 3 existence call history</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_successCallback_undefined.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistory_removeBatch_errorCallback_undefined" purpose="Check whether removeBatch() method called with undefined errorCallback throws exception">
        <description>
          <pre_condition>Make at least 3 existence call history</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_removeBatch_errorCallback_undefined.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_sortMode_undefined" onload_delay="90" purpose="Check whether find() method called with null filter and undefined sortMode lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_sortMode_undefined.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_filter_undefined" onload_delay="90" purpose="Check whether find() method called with undefined filter lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_filter_undefined.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistoryChangeCallback_onremoved" purpose="Check if CallHistoryChangeCallback onremoved is called properly">
        <description>
          <pre_condition>Make a call</pre_condition>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryChangeCallback_onremoved.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_without_errorCallback" onload_delay="90" purpose="Check if find() method calls successCallback function properly">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_without_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_filter" onload_delay="90" purpose="Check if CallHistory items matching the supplied filter are found properly">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_filter.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_sortMode" onload_delay="90" purpose="Check whether find() method called with successCallback, errorCallback, filter and sortMode lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_sortMode.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_limit" onload_delay="90" purpose="Check whether find() method called with successCallback, errorCallback, filter, sortMode and limit lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_limit.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_offset" onload_delay="90" purpose="Check whether find() method called with successCallback, errorCallback, filter, sortMode limit and offset lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_offset.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_offset_0" onload_delay="90" purpose="Check if find() method calls successCallback function properly for offset equal 0">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_offset_0.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_errorCallback_null_filter" onload_delay="90" purpose="Check whether find() method called with null errorCallback and specified filter lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_errorCallback_null_filter.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_filter_null_sortMode" onload_delay="90" purpose="Check whether find() method called with null filter and specified sortMode lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_filter_null_sortMode.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_filter_sortMode_null" onload_delay="90" purpose="Check whether find() method called with null filter, null sortMode and specified limit lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_filter_sortMode_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_filter_compositeFilters" onload_delay="90" purpose="Check whether find() method lists CallHistory items for various composite filters">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_filter_compositeFilters.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_filter_rangeFilters" onload_delay="90" purpose="Check whether find() method lists CallHistory items for various range filters">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_filter_rangeFilters.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_filter_sortMode_limit_null_offset" onload_delay="90" purpose="Check whether find() method called with null filter, sortMode, limit and specified offset lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_filter_sortMode_limit_null_offset.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_filter_various" onload_delay="90" purpose="Check whether find() method lists CallHistory items for various filters">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_filter_various.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_find_limit_1" onload_delay="90" purpose="Check whether find() method called with additional arguments lists CallHistory items">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_find_limit_1.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_addChangeListener_onadded" purpose="Check whether addChangeListener() registers listener with onadded argument">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_addChangeListener_onadded.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_addChangeListener_onchanged" purpose="Check whether addChangeListener() registers listener with onchanged argument">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_addChangeListener_onchanged.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_addChangeListener_observer_onadded_invalid" onload_delay="90" purpose="Check whether invoking 'addChangeListener' method with incorect onadded argument throws exception properly">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_addChangeListener_observer_onadded_invalid.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistory_addChangeListener_observer_onchanged_invalid" onload_delay="90" purpose="Check whether invoking 'addChangeListener' method with incorect onchanged argument throws exception properly">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistory_addChangeListener_observer_onchanged_invalid.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="auto" id="CallHistoryObject_notexist" purpose="Check if CallHistoryObject not exist">
        <description>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryObject_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Social/Callhistory" execution_type="manual" id="CallHistoryEntry" purpose="Check CallHistoryEntry attributes and functions">
        <description>
          <pre_condition>Make an existence call history</pre_condition>
          <steps>
            <step order="1">
              <step_desc>several tests executed from base test</step_desc>
              <expected>all subtests should be successful</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-callhistory-tizen-tests/callhistory/CallHistoryEntry.html</test_script_entry>
        </description>
      </testcase>
    </set>
  </suite>
</test_definition>