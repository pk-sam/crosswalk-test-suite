<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./testcase.xsl"?>
<test_definition>
  <suite category="Tizen Web Device APIs" extension="crosswalk" name="tct-networkbearerselection-tizen-tests">
    <set name="NBS" type="js">
      <capabilities>
        <capability name="telephony" />
      </capabilities>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelectionObject_notexist" purpose="Check if interface NetworkBearerSelectionObject exists, it should not">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelectionObject_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_extend" purpose="Check if NetworkBearerSelection instance can have new properties added">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_in_tizen" purpose="Check if Tizen namespace contains networkbearerselection">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_in_tizen.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_notexist" purpose="Check if interface NetworkBearerSelection exists, it should not">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_releaseRouteToHost" onload_delay="90" purpose="Check if NetworkBearerSelection::releaseRouteToHost() method called with only mandatory arguments does what it should">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_releaseRouteToHost.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_releaseRouteToHost_errorCallback_TypeMismatch" onload_delay="90" purpose="Check if NetworkBearerSelection::releaseRouteToHost() throws exception when errorCallback is incorrect">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_releaseRouteToHost_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_releaseRouteToHost_errorCallback_invalid_cb" onload_delay="90" purpose="Check if NetworkBearerSelection::releaseRouteToHost() throws exception when errorCallback is invalid">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_releaseRouteToHost_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_releaseRouteToHost_exist" purpose="Check if NetworkBearerSelection::releaseRouteToHost() method exists">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_releaseRouteToHost_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_releaseRouteToHost_missarg" purpose="Check if NetworkBearerSelection::releaseRouteToHost() method called with missing mandatory argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_releaseRouteToHost_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_releaseRouteToHost_networkType_TypeMismatch" onload_delay="90" purpose="Check if NetworkBearerSelection::releaseRouteToHost() throws exception when networkType is incorrect">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_releaseRouteToHost_networkType_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_releaseRouteToHost_successCallback_TypeMismatch" purpose="Check if NetworkBearerSelection::releaseRouteToHost() throws exception when successCallback is incorrect">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_releaseRouteToHost_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_releaseRouteToHost_successCallback_invalid_cb" onload_delay="90" purpose="Check if NetworkBearerSelection::releaseRouteToHost() throws exception when successCallback is invalid">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_releaseRouteToHost_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_releaseRouteToHost_with_errorCallback" onload_delay="90" purpose="Check if NetworkBearerSelection::releaseRouteToHost() called with optional errorCallback works as expected">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_releaseRouteToHost_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_requestRouteToHost" onload_delay="90" purpose="Check if NetworkBearerSelection::requestRouteToHost() method called with only mandatory arguments does what it should">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_requestRouteToHost.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_requestRouteToHost_errorCallback_TypeMismatch" onload_delay="90" purpose="Check if NetworkBearerSelection::requestRouteToHost() throws exception when errorCallback is incorrect">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_requestRouteToHost_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_requestRouteToHost_errorCallback_invalid_cb" onload_delay="90" purpose="Check if NetworkBearerSelection::requestRouteToHost() throws exception when errorCallback is invalid">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_requestRouteToHost_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_requestRouteToHost_exist" purpose="Check if NetworkBearerSelection::requestRouteToHost() method exists">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_requestRouteToHost_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_requestRouteToHost_missarg" purpose="Check if NetworkBearerSelection::requestRouteToHost() method called with missing mandatory argument throws an exception">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_requestRouteToHost_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_requestRouteToHost_networkType_TypeMismatch" onload_delay="90" purpose="Check if NetworkBearerSelection::requestRouteToHost() throws exception when networkType is incorrect">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_requestRouteToHost_networkType_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_requestRouteToHost_successCallback_TypeMismatch" purpose="Check if NetworkBearerSelection::requestRouteToHost() throws exception when successCallback is incorrect">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_requestRouteToHost_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_requestRouteToHost_successCallback_invalid_cb" onload_delay="90" purpose="Check if NetworkBearerSelection::requestRouteToHost() throws exception when successCallback is invalid">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_requestRouteToHost_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkBearerSelection_requestRouteToHost_with_errorCallback" onload_delay="90" purpose="Check if NetworkBearerSelection::requestRouteToHost() called with optional errorCallback works as expected">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkBearerSelection_requestRouteToHost_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkSuccessCallback_notexist" purpose="Check if interface NetworkSuccessCallback exists, it should not.">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkSuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="manual" id="NetworkSuccessCallback_ondisconnected" purpose="Check if NetworkSuccessCallback::ondisconnected is called">
        <description>
          <pre_condition>Please enable cellular data service</pre_condition>
          <post_condition>Please re-enable cellular data service</post_condition>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkSuccessCallback_ondisconnected.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/NBS" execution_type="auto" id="NetworkSuccessCallback_onsuccess" onload_delay="90" purpose="Check if NetworkSuccessCallback::onsuccess is called">
        <description>
          <test_script_entry>/opt/tct-networkbearerselection-tizen-tests/networkbearerselection/NetworkSuccessCallback_onsuccess.html</test_script_entry>
        </description>
      </testcase>
    </set>
  </suite>
</test_definition>