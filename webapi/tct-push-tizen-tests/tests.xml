<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./testcase.xsl"?>
<test_definition>
  <suite category="Tizen Web Device APIs" extension="crosswalk" name="tct-push-tizen-tests">
    <set name="Push" type="js">
      <capabilities>
        <capability name="push" />
      </capabilities>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_registerService" onload_delay="90" purpose="Check if method registerService of PushManager works properly">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_registerService.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_registerService_without_errorCallback" onload_delay="90" purpose="Check if method registerService of PushManager works properly without errorCallback">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_registerService_without_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManagerObject_notexist" purpose="Check if interface PushManagerObject exists, it should not">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManagerObject_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_connectService_exist" purpose="Check if method connectService of PushManager exists">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_connectService_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_disconnectService_exist" purpose="Check if method disconnectService of PushManager exists">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_disconnectService_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_disconnectService_extra_argument" purpose="Check if method disconnectService of PushManager accepts extra argument">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_disconnectService_extra_argument.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_extend" purpose="Check if PushManager is extendable">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_getRegistrationId_exist" purpose="Check if method getRegistrationId of PushManager exists">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_getRegistrationId_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_getRegistrationId_extra_argument" purpose="Check if method getRegistrationId of PushManager accepts extra argument">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_getRegistrationId_extra_argument.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_getRegistrationId_notRegistered" onload_delay="90" purpose="Check if method getRegistrationId of PushManager returns default value">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_getRegistrationId_notRegistered.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_in_tizen" purpose="Check if push exists in tizen">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_in_tizen.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_notexist" purpose="Check if interface PushManager exists, it should not">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_registerService_appControl_TypeMismatch" onload_delay="90" purpose="Check type conversions for appControl argument of PushManager.registerService method">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_registerService_appControl_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_registerService_appControl_invalid_obj" onload_delay="90" purpose="Check if PushManager.registerService method throws exception when appControl is invalid">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_registerService_appControl_invalid_obj.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_registerService_misargs" purpose="Check if method registerService throws exception when non-optional argument is missing">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_registerService_misargs.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_registerService_exist" purpose="Check if method registerService of PushManager exists">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_registerService_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_registerService_successCallback_TypeMismatch" onload_delay="90" purpose="Check type conversions for successCallback argument of PushManager.registerService method">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_registerService_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_registerService_successCallback_invalid_cb" onload_delay="90" purpose="Check if PushManager.registerService method throws exception when successCallback is invalid">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_registerService_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_unregisterService_exist" purpose="Check if method unregisterService of PushManager exists">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_unregisterService_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushMessage_notexist" purpose="Check if interface PushMessage exists, it should not">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushMessage_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushNotificationCallback_notexist" purpose="Check if interface PushNotificationCallback exists, it should not">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushNotificationCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_unregisterService_errorCallback_TypeMismatch" onload_delay="90" purpose="Check type conversions for errorCallback argument of PushManager.unregisterService method">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_unregisterService_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_unregisterService_errorCallback_invalid_cb" onload_delay="90" purpose="Check if PushManager.unregisterService method throws exception when errorCallback is invalid">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_unregisterService_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_registerService_errorCallback_TypeMismatch" onload_delay="90" purpose="Check type conversions for errorCallback argument of PushManager.registerService method">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_registerService_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_registerService_errorCallback_invalid_cb" onload_delay="90" purpose="Check if PushManager.registerService method throws exception when errorCallback is invalid">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_registerService_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_unregisterService_successCallback_TypeMismatch" onload_delay="90" purpose="Check type conversions for successCallback argument of PushManager.unregisterService method">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_unregisterService_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_unregisterService_successCallback_invalid_cb" onload_delay="90" purpose="Check if PushManager.unregisterService method throws exception when successCallback is invalid">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_unregisterService_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_connectService_notificationCallback_TypeMismatch" purpose="Check type conversions for notificationCallback argument of PushManager.connectService method">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_connectService_notificationCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_connectService_notificationCallback_invalid_cb" onload_delay="90" purpose="Check if PushManager.connectService method throws exception when notificationCallback is invalid">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_connectService_notificationCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_getRegistrationId" onload_delay="90" purpose="Check if method getRegistrationId of PushManager works correctly">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_getRegistrationId.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_connectService" onload_delay="90" purpose="Check if connectService method works correctly">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_connectService.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_connectService_missarg" onload_delay="90" purpose="Check with missing non-optional argument - PushManager.connectService method">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_connectService_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_disconnectService" onload_delay="90" purpose="Check if disconnectService method works correctly">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_disconnectService.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_unregisterService" onload_delay="90" purpose="Check if unregisterService works correctly">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_unregisterService.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_unregisterService_without_errorCallback" onload_delay="90" purpose="Check if unregisterService method works without errorCallback">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_unregisterService_without_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushManager_unregisterService_without_successCallback" onload_delay="90" purpose="Check if unregisterService method works without successCallback">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushManager_unregisterService_without_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushRegisterSuccessCallback_onsuccess" onload_delay="90" purpose="Check if PushRegisterSuccessCallback works">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushRegisterSuccessCallback_onsuccess.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/Communication/Push" execution_type="auto" id="PushRegisterSuccessCallback_notexist" purpose="Check if interface PushRegisterSuccessCallback exists, it should not">
        <description>
          <test_script_entry>/opt/tct-push-tizen-tests/push/PushRegisterSuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
    </set>
  </suite>
</test_definition>