<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./testcase.xsl"?>
<test_definition>
  <suite category="Tizen Web Device APIs" extension="crosswalk" name="tct-websetting-tizen-tests">
    <set name="WebSetting" type="js">
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingObject_notexist" purpose="Check if WebSetting object notexist">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingObject_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_in_tizen" purpose="Check if WebsettingManager exists in Tizen">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_in_tizen.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_extend" purpose="Check if instance of interface WebsettingManager can be extended with new property">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_notexist" purpose="Check if WebSettingManager notexist">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_setUserAgentString_exist" purpose="Check if setUserAgentString method exists in WebSettingManager">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_setUserAgentString_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_setUserAgentString" purpose="Check if WebsettingManager setAgentString method works properly">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_setUserAgentString.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_setUserAgentString_nullableargs" purpose="Check if setAgentString method with optional null arguments works properly">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_setUserAgentString_nullableargs.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_setUserAgentString_with_successCallback" purpose="Check if WebsettingManager setAgentString method with successCallback works properly">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_setUserAgentString_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_setUserAgentString_successCallback_invalid_cb" purpose="Check if setUserAgentString throws exception when invalid success callback is given">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_setUserAgentString_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_setUserAgentString_successCallback_TypeMismatch" purpose="Check if setUserAgentString throws exception when success callback is incorrect">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_setUserAgentString_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_setUserAgentString_errorCallback_invalid_cb" purpose="Check if setUserAgentString throws exception when invalid error callback is given">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_setUserAgentString_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_setUserAgentString_with_errorCallback" purpose="Check if WebsettingManager setAgentString method with errorCallback works properly">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_setUserAgentString_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_setUserAgentString_errorCallback_TypeMismatch" purpose="Check if setUserAgentString throws exception when error callback is incorrect">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_setUserAgentString_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_removeAllCookies_exist" purpose="Check if removeAllCookies method exists in WebSettingManager">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_removeAllCookies_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_removeAllCookies" purpose="Check if removeAllCookies method works properly">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_removeAllCookies.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_removeAllCookies_nullableargs" purpose="Check if removeAllCookies method with null arguments works properly">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_removeAllCookies_nullableargs.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_removeAllCookies_with_successCallback" purpose="Check if removeAllCookies method with success callback works properly">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_removeAllCookies_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_removeAllCookies_successCallback_invalid_cb" purpose="Check if removeAllCookies throws exception when invalid success callback is given">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_removeAllCookies_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_removeAllCookies_successCallback_TypeMismatch" purpose="Check if removeAllCookies throws exception when success callback is incorrect">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_removeAllCookies_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_removeAllCookies_with_errorCallback" purpose="Check if removeAllCookies method with error callback works properly">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_removeAllCookies_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_removeAllCookies_errorCallback_invalid_cb" purpose="Check if removeAllCookies throws exception when invalid error callback is given">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_removeAllCookies_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Tizen Device APIs/System/WebSetting" execution_type="auto" id="WebSettingManager_removeAllCookies_errorCallback_TypeMismatch" purpose="Check if removeAllCookies throws exception when error callback is incorrect">
        <description>
          <test_script_entry>/opt/tct-websetting-tizen-tests/websetting/WebSettingManager_removeAllCookies_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
    </set>
  </suite>
</test_definition>